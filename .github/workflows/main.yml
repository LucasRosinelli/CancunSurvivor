name: .NET Core

on: [push, pull_request]

jobs:
  quality:
    name: Quality
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install ReportGenerator
        shell: powershell
        run: |
          New-Item -Path .\tools -ItemType Directory
          dotnet tool install --tool-path .\tools dotnet-reportgenerator-globaltool
      - name: Test and generate reports
        shell: powershell
        run: |
          dotnet test -r testreports --collect:"XPlat Code Coverage" --test-adapter-path:. --logger:"junit;LogFilePath=..\..\testreports\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose" --logger="trx"
          .\tools\reportgenerator "-reports:testreports/*/coverage.cobertura.xml" '-reporttypes:TextSummary;SonarQube' -targetdir:testreports
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"LucasRosinelli_CancunSurvivor" /o:"lucasrosinelli" /n:"Cancun Survivor" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.coverageReportPaths="testreports/SonarQube.xml" /d:sonar.cs.vstest.reportsPaths="testreports/*.trx"
          dotnet build .
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: Restore
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore --verbosity normal
